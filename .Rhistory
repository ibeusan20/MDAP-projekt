labs(title = paste("Boxplot varijable:", var), y = var) +
theme_minimal()
)
}
kvalitativne <- c(
"Marital.status", "Application.mode", "Application.order", "Course",
"Daytime.evening.attendance.", "Previous.qualification", "Nacionality",
"Mother.s.qualification", "Father.s.qualification", "Mother.s.occupation",
"Father.s.occupation", "Displaced", "Educational.special.needs", "Debtor",
"Tuition.fees.up.to.date", "Gender", "Scholarship.holder", "International",
"Target"
)
# Pretvorba za lak≈°u analizu:
# Pretvori kvalitativne varijable u factor
df_sample[, kvalitativne] <- lapply(df_sample[, kvalitativne], as.factor)
# Provjera: sve bi trebale sada imati ispravan tip
str(df_sample)
# Desktiptivna statistika kval. varijabli:
# Za svaku varijablu ispis moda i frekvencijske distribucije
for (var in kvalitativne) {
cat("üîπ Varijabla:", var, "\n")
mod_value <- names(sort(table(df_sample[[var]]), decreasing = TRUE))[1]
cat("   Mod:", mod_value, "\n")
print(sort(table(df_sample[[var]]), decreasing = TRUE))
cat("\n")
}
# Grafiƒçki prikaz ‚Äì stupƒçasti dijagram za svaku kvalitativnu varijablu:
library(ggplot2)
for (var in kvalitativne) {
plot_data <- as.data.frame(table(df_sample[[var]]))
colnames(plot_data) <- c("Kategorija", "Frekvencija")
print(
ggplot(plot_data, aes(x = reorder(Kategorija, -Frekvencija), y = Frekvencija)) +
geom_bar(stat = "identity", fill = "darkgreen") +
labs(title = paste("Barplot za varijablu:", var), x = var, y = "Frekvencija") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
)
}
install.packages("corrplot")
install.packages("GGally")
install.packages("dplyr")
install.packages("reshape2")
library(corrplot)
library(GGally)
library(dplyr)
library(reshape2)
install.packages("reshape2")
# Skraƒáeni nazivi (ruƒçno prilagoƒëeni za preglednost)
kratki_nazivi <- c(
"Prev.Grade", "Adm.Grade", "Age.Enroll",
"1st.Grade", "2nd.Grade", "Unemp.Rate", "Infl.Rate", "GDP",
"1st.Cred", "1st.Enroll", "1st.Eval", "1st.Approv", "1st.NoEval",
"2nd.Cred", "2nd.Enroll", "2nd.Eval", "2nd.Approv", "2nd.NoEval"
)
# Priprema podatkaka i korelacijske matrice
df_kv <- df_sample[, kvantitativne]
colnames(df_kv) <- kratki_nazivi
korelacija <- cor(df_kv, use = "complete.obs")
# Prikaz ƒçitke matrice
library(corrplot)
corrplot(korelacija, method = "color", type = "lower",
tl.col = "black", tl.srt = 45,
addCoef.col = "black", number.cex = 0.8, diag = FALSE)
korelacija <- cor(df_kv, use = "complete.obs")
# Pretvorba korelacijske matrice u long-format tablicu
library(reshape2)
korelacija_long <- melt(korelacija)
colnames(korelacija_long) <- c("Var1", "Var2", "Correlation")
# Filtriraj samo razliƒçite parove (izbaci duplikate i dijagonalu)
korelacija_long <- korelacija_long[korelacija_long$Var1 != korelacija_long$Var2, ]
korelacija_long <- korelacija_long[!duplicated(apply(korelacija_long[,1:2], 1, paste, collapse = "_")), ]
# Prika≈æi jake pozitivne korelacije (>= 0.7)
korelacija_jaka_poz <- korelacija_long %>%
filter(Correlation >= 0.7)
# Prika≈æi jake negativne korelacije (<= -0.3)
korelacija_jaka_neg <- korelacija_long %>%
filter(Correlation <= -0.3)
# Ispi≈°i rezultate
korelacija_jaka_poz
korelacija_jaka_neg
# Skraƒáeni nazivi (ruƒçno prilagoƒëeni za preglednost)
kratki_nazivi <- c(
"Prev.Grade", "Adm.Grade", "Age.Enroll",
"1st.Grade", "2nd.Grade", "Unemp.Rate", "Infl.Rate", "GDP",
"1st.Cred", "1st.Enroll", "1st.Eval", "1st.Approv", "1st.NoEval",
"2nd.Cred", "2nd.Enroll", "2nd.Eval", "2nd.Approv", "2nd.NoEval"
)
# Priprema podatkaka i korelacijske matrice
df_kv <- df_sample[, kvantitativne]
colnames(df_kv) <- kratki_nazivi
korelacija <- cor(df_kv, use = "complete.obs")
# Prikaz ƒçitke matrice
library(corrplot)
corrplot(korelacija, method = "color", type = "lower",
tl.col = "black", tl.srt = 45,
addCoef.col = "black", number.cex = 0.8, diag = FALSE)
korelacija <- cor(df_kv, use = "complete.obs")
# Pretvorba korelacijske matrice u long-format tablicu
library(reshape2)
korelacija_long <- melt(korelacija)
colnames(korelacija_long) <- c("Var1", "Var2", "Correlation")
# Filtriraj samo razliƒçite parove (izbaci duplikate i dijagonalu)
korelacija_long <- korelacija_long[korelacija_long$Var1 != korelacija_long$Var2, ]
korelacija_long <- korelacija_long[!duplicated(apply(korelacija_long[,1:2], 1, paste, collapse = "_")), ]
# Prika≈æi jake pozitivne korelacije (>= 0.7)
korelacija_jaka_poz <- korelacija_long %>%
filter(Correlation >= 0.7)
# Prika≈æi jake negativne korelacije (<= -0.3)
korelacija_jaka_neg <- korelacija_long %>%
filter(Correlation <= -0.3)
# Ispi≈°i rezultate
korelacija_jaka_poz
korelacija_jaka_neg
# Skraƒáeni nazivi (ruƒçno prilagoƒëeni za preglednost)
kratki_nazivi <- c(
"Prev.Grade", "Adm.Grade", "Age.Enroll",
"1st.Grade", "2nd.Grade", "Unemp.Rate", "Infl.Rate", "GDP",
"1st.Cred", "1st.Enroll", "1st.Eval", "1st.Approv", "1st.NoEval",
"2nd.Cred", "2nd.Enroll", "2nd.Eval", "2nd.Approv", "2nd.NoEval"
)
# Priprema podatkaka i korelacijske matrice
df_kv <- df_sample[, kvantitativne]
colnames(df_kv) <- kratki_nazivi
korelacija <- cor(df_kv, use = "complete.obs")
# Prikaz ƒçitke matrice
library(corrplot)
corrplot(korelacija, method = "color", type = "lower",
tl.col = "black", tl.srt = 45,
addCoef.col = "black", number.cex = 0.8, diag = FALSE)
korelacija <- cor(df_kv, use = "complete.obs")
# Pretvorba korelacijske matrice u long-format tablicu
library(reshape2)
korelacija_long <- melt(korelacija)
colnames(korelacija_long) <- c("Var1", "Var2", "Correlation")
# Filtriraj samo razliƒçite parove (izbaci duplikate i dijagonalu)
korelacija_long <- korelacija_long[korelacija_long$Var1 != korelacija_long$Var2, ]
korelacija_long <- korelacija_long[!duplicated(apply(korelacija_long[,1:2], 1, paste, collapse = "_")), ]
# Prika≈æi jake pozitivne korelacije (>= 0.7)
korelacija_jaka_poz <- korelacija_long %>%
filter(Correlation >= 0.7)
# Prika≈æi jake negativne korelacije (<= -0.3)
korelacija_jaka_neg <- korelacija_long %>%
filter(Correlation <= -0.3)
# Ispi≈°i rezultate
korelacija_jaka_poz
korelacija_jaka_neg
library(ggplot2)
library(dplyr)
kvantitativne <- df_sample %>% select(where(is.numeric)) %>% colnames()
df_num <- df_sample[, c(kvantitativne, "Target")]
df_num$Target <- as.factor(df_num$Target)
for (var in kvantitativne) {
p <- ggplot(df_num, aes_string(x = "Target", y = var, color = "Target")) +
geom_jitter(width = 0.2, alpha = 0.5) +
geom_boxplot(alpha = 0.3, outlier.shape = NA) +
theme_minimal() +
labs(title = paste("Distribucija varijable:", var),
x = "Ishod studenta (Target)",
y = var) +
theme(legend.position = "none")
print(p)
}
# manji podskup radi preglednosti (npr. 6 varijabli)
colnames(df_kv) <- kratki_nazivi
GGally::ggpairs(df_kv[, 1:8])
#GGally::ggpairs(df_kv)
# Ukupan broj NA po varijabli
colSums(is.na(df_sample))
# Postotak NA po varijabli
na_pct <- colMeans(is.na(df_sample)) * 100
na_pct[na_pct > 0]
# Broj potpuno identiƒçnih redaka
sum(duplicated(df_sample))
# Ispis prvih nekoliko duplikata, ako postoje
df_sample[duplicated(df_sample), ][1:5, ]
# Broj potpuno identiƒçnih redaka
sum(duplicated(df_sample))
# Ispis prvih nekoliko duplikata, ako postoje
df_sample[duplicated(df_sample), ][1:5, ]
# Definiranje outliera po IQR
detect_outliers_iqr <- function(x) {
Q1 <- quantile(x, 0.25, na.rm = TRUE)
Q3 <- quantile(x, 0.75, na.rm = TRUE)
IQR <- Q3 - Q1
(x < (Q1 - 1.5 * IQR)) | (x > (Q3 + 1.5 * IQR))
}
# Primjena na sve kvantitativne varijable
outlier_summary <- sapply(df_sample[ , kvantitativne], function(col) sum(detect_outliers_iqr(col)))
outlier_summary[outlier_summary > 0]
# Petlja za crtanje boxplotova za sve kvantitativne varijable
par(mfrow = c(1, 1))  # prilagodljiv raspored
for (var in kvantitativne) {
boxplot(df_sample[[var]],
main = var,
ylab = "Vrijednost",
col = "lightblue",
border = "darkblue",
outcol = "red")
}
par(mfrow = c(1, 1))
View(df_kv)
View(df_num)
View(df_kv)
View(df_kv)
View(df_num)
View(df_kv)
View(df_kv)
View(deskriptiva_kv_t)
View(deskriptiva_kv)
View(korelacija_long)
View(df)
View(df_kv)
View(df_num)
View(df_kv)
View(df_kv)
View(df_num)
View(df_sample)
options(repos = c(CRAN = "https://cran.r-project.org"))
library(dplyr)
df <- read.csv("data.csv", sep = ";")
# Prilagodba naziva varijabli
names(df) <- make.names(names(df))
# Pogled prvih par redova
head(df)
# Struktura podataka
str(df)
# Sa≈æetak skupa podataka:
# Kratak sa≈æetak svih varijabli
summary(df)
# Detaljan opis po tipu (kvantitativne, kvalitativne)
library(skimr)
skim(df)
# Raspodjela klasa u originalnom skupu
table(df$Target)
prop.table(table(df$Target))  # relativne frekvencije
# Broj opservacija u podskupu
N <- 1500
# Stratificirano uzorkovanje
set.seed(123)  # reproducibilnost
library(dplyr)
df_sample <- df %>%
group_by(Target) %>%
sample_frac(size = N / nrow(df)) %>%
ungroup()
# Provjera rezultata
table(df_sample$Target)
prop.table(table(df_sample$Target))
nrow(df_sample) # cca. 1500
kvantitativne <- c(
"Previous.qualification..grade.",
"Admission.grade",
"Age.at.enrollment",
"Curricular.units.1st.sem..grade.",
"Curricular.units.2nd.sem..grade.",
"Unemployment.rate",
"Inflation.rate",
"GDP",
"Curricular.units.1st.sem..credited.",
"Curricular.units.1st.sem..enrolled.",
"Curricular.units.1st.sem..evaluations.",
"Curricular.units.1st.sem..approved.",
"Curricular.units.1st.sem..without.evaluations.",
"Curricular.units.2nd.sem..credited.",
"Curricular.units.2nd.sem..enrolled.",
"Curricular.units.2nd.sem..evaluations.",
"Curricular.units.2nd.sem..approved.",
"Curricular.units.2nd.sem..without.evaluations."
)
kvantitativne <- c(
"Previous.qualification..grade.",
"Admission.grade",
"Age.at.enrollment",
"Curricular.units.1st.sem..grade.",
"Curricular.units.2nd.sem..grade.",
"Unemployment.rate",
"Inflation.rate",
"GDP",
"Curricular.units.1st.sem..credited.",
"Curricular.units.1st.sem..enrolled.",
"Curricular.units.1st.sem..evaluations.",
"Curricular.units.1st.sem..approved.",
"Curricular.units.1st.sem..without.evaluations.",
"Curricular.units.2nd.sem..credited.",
"Curricular.units.2nd.sem..enrolled.",
"Curricular.units.2nd.sem..evaluations.",
"Curricular.units.2nd.sem..approved.",
"Curricular.units.2nd.sem..without.evaluations."
)
# Desktiptivna statistika kvant. varijabli:
df_kv <- df_sample[, kvantitativne]
library(dplyr)
deskriptiva_kv <- df_kv %>%
summarise_all(list(
Srednja = mean,
Medijan = median,
SD = sd,
Q1 = ~quantile(., 0.25),
Q3 = ~quantile(., 0.75),
Min = min,
Max = max
), na.rm = TRUE)
# Transponiranje za preglednost
deskriptiva_kv_t <- t(deskriptiva_kv)
# Prikaz tablice
knitr::kable(deskriptiva_kv_t, digits = 2,
col.names = c("Srednja", "Medijan", "SD", "Q1", "Q3", "Min", "Max"),
caption = "Deskriptivna statistika kvantitativnih varijabli")
# Grafiƒçki prikaz histograma:
library(ggplot2)
for (var in kvantitativne) {
print(
ggplot(df_sample, aes_string(x = var)) +
geom_histogram(fill = "steelblue", color = "black", bins = 30) +
labs(title = paste("Histogram varijable:", var), x = var, y = "Frekvencija") +
theme_minimal()
)
}
# Grafiƒçki prikaz boxplotova:
for (var in kvantitativne) {
print(
ggplot(df_sample, aes_string(y = var)) +
geom_boxplot(fill = "darkorange", color = "black") +
labs(title = paste("Boxplot varijable:", var), y = var) +
theme_minimal()
)
}
kvalitativne <- c(
"Marital.status", "Application.mode", "Application.order", "Course",
"Daytime.evening.attendance.", "Previous.qualification", "Nacionality",
"Mother.s.qualification", "Father.s.qualification", "Mother.s.occupation",
"Father.s.occupation", "Displaced", "Educational.special.needs", "Debtor",
"Tuition.fees.up.to.date", "Gender", "Scholarship.holder", "International",
"Target"
)
# Pretvorba za lak≈°u analizu:
# Pretvori kvalitativne varijable u factor
df_sample[, kvalitativne] <- lapply(df_sample[, kvalitativne], as.factor)
# Provjera: sve bi trebale sada imati ispravan tip
str(df_sample)
# Desktiptivna statistika kval. varijabli:
# Za svaku varijablu ispis moda i frekvencijske distribucije
for (var in kvalitativne) {
cat("üîπ Varijabla:", var, "\n")
mod_value <- names(sort(table(df_sample[[var]]), decreasing = TRUE))[1]
cat("   Mod:", mod_value, "\n")
print(sort(table(df_sample[[var]]), decreasing = TRUE))
cat("\n")
}
# Grafiƒçki prikaz ‚Äì stupƒçasti dijagram za svaku kvalitativnu varijablu:
library(ggplot2)
for (var in kvalitativne) {
plot_data <- as.data.frame(table(df_sample[[var]]))
colnames(plot_data) <- c("Kategorija", "Frekvencija")
print(
ggplot(plot_data, aes(x = reorder(Kategorija, -Frekvencija), y = Frekvencija)) +
geom_bar(stat = "identity", fill = "darkgreen") +
labs(title = paste("Barplot za varijablu:", var), x = var, y = "Frekvencija") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
)
}
#install.packages("corrplot")
#install.packages("GGally")
#install.packages("dplyr")
#install.packages("reshape2")
library(corrplot)
library(GGally)
library(dplyr)
library(reshape2)
#install.packages("corrplot")
#install.packages("GGally")
#install.packages("dplyr")
#install.packages("reshape2")
library(corrplot)
library(GGally)
library(dplyr)
library(reshape2)
#install.packages("corrplot")
#install.packages("GGally")
#install.packages("dplyr")
#install.packages("reshape2")
library(corrplot)
library(GGally)
library(dplyr)
library(reshape2)
#install.packages("corrplot")
#install.packages("GGally")
#install.packages("dplyr")
#install.packages("reshape2")
library(corrplot)
library(GGally)
library(dplyr)
library(reshape2)
# Skraƒáeni nazivi (ruƒçno prilagoƒëeni za preglednost)
kratki_nazivi <- c(
"Prev.Grade", "Adm.Grade", "Age.Enroll",
"1st.Grade", "2nd.Grade", "Unemp.Rate", "Infl.Rate", "GDP",
"1st.Cred", "1st.Enroll", "1st.Eval", "1st.Approv", "1st.NoEval",
"2nd.Cred", "2nd.Enroll", "2nd.Eval", "2nd.Approv", "2nd.NoEval"
)
# Priprema podatkaka i korelacijske matrice
df_kv <- df_sample[, kvantitativne]
colnames(df_kv) <- kratki_nazivi
korelacija <- cor(df_kv, use = "complete.obs")
# Prikaz ƒçitke matrice
library(corrplot)
corrplot(korelacija, method = "color", type = "lower",
tl.col = "black", tl.srt = 45,
addCoef.col = "black", number.cex = 0.8, diag = FALSE)
korelacija <- cor(df_kv, use = "complete.obs")
# Pretvorba korelacijske matrice u long-format tablicu
library(reshape2)
korelacija_long <- melt(korelacija)
colnames(korelacija_long) <- c("Var1", "Var2", "Correlation")
# Filtriraj samo razliƒçite parove (izbaci duplikate i dijagonalu)
korelacija_long <- korelacija_long[korelacija_long$Var1 != korelacija_long$Var2, ]
korelacija_long <- korelacija_long[!duplicated(apply(korelacija_long[,1:2], 1, paste, collapse = "_")), ]
# Prika≈æi jake pozitivne korelacije (>= 0.7)
korelacija_jaka_poz <- korelacija_long %>%
filter(Correlation >= 0.7)
# Prika≈æi jake negativne korelacije (<= -0.3)
korelacija_jaka_neg <- korelacija_long %>%
filter(Correlation <= -0.3)
# Ispi≈°i rezultate
korelacija_jaka_poz
korelacija_jaka_neg
library(ggplot2)
library(dplyr)
kvantitativne <- df_sample %>% select(where(is.numeric)) %>% colnames()
df_num <- df_sample[, c(kvantitativne, "Target")]
df_num$Target <- as.factor(df_num$Target)
for (var in kvantitativne) {
p <- ggplot(df_num, aes_string(x = "Target", y = var, color = "Target")) +
geom_jitter(width = 0.2, alpha = 0.5) +
geom_boxplot(alpha = 0.3, outlier.shape = NA) +
theme_minimal() +
labs(title = paste("Distribucija varijable:", var),
x = "Ishod studenta (Target)",
y = var) +
theme(legend.position = "none")
print(p)
}
# manji podskup radi preglednosti (npr. 6 varijabli)
colnames(df_kv) <- kratki_nazivi
GGally::ggpairs(df_kv[, 1:8])
#GGally::ggpairs(df_kv)
# Ukupan broj NA po varijabli
colSums(is.na(df_sample))
# Postotak NA po varijabli
na_pct <- colMeans(is.na(df_sample)) * 100
na_pct[na_pct > 0]
# Broj potpuno identiƒçnih redaka
#sum(duplicated(df_sample))
# Ispis prvih nekoliko duplikata, ako postoje
#df_sample[duplicated(df_sample), ][1:5, ]
# Broj potpuno identiƒçnih redaka
#sum(duplicated(df_sample))
# Ispis prvih nekoliko duplikata, ako postoje
#df_sample[duplicated(df_sample), ][1:5, ]
# Definiranje outliera po IQR
detect_outliers_iqr <- function(x) {
Q1 <- quantile(x, 0.25, na.rm = TRUE)
Q3 <- quantile(x, 0.75, na.rm = TRUE)
IQR <- Q3 - Q1
(x < (Q1 - 1.5 * IQR)) | (x > (Q3 + 1.5 * IQR))
}
# Primjena na sve kvantitativne varijable
outlier_summary <- sapply(df_sample[ , kvantitativne], function(col) sum(detect_outliers_iqr(col)))
outlier_summary[outlier_summary > 0]
# Petlja za crtanje boxplotova za sve kvantitativne varijable
par(mfrow = c(1, 1))
for (var in kvantitativne) {
boxplot(df_sample[[var]],
main = var,
ylab = "Vrijednost",
col = "lightblue",
border = "darkblue",
outcol = "red")
}
par(mfrow = c(1, 1))
num_vars <- df %>% select_if(is.numeric)
num_vars <- df %>% select_if(is.numeric)
cor_matrix <- cor(num_vars, use = "complete.obs")
round(cor_matrix, 2)
library(corrplot)
corrplot::corrplot(cor_matrix, method = "color", tl.cex = 0.7)
View(num_vars)
##num_vars <- df %>% select_if(is.numeric)
num_vars <- df_sample[, kvantitativne] #veƒá napravljeno kao df_kv ali eto da se vidi opet...
cor_matrix <- cor(num_vars, use = "complete.obs")
round(cor_matrix, 2)
library(corrplot)
corrplot::corrplot(cor_matrix, method = "color", tl.cex = 0.7)
pairs(~ Admission.grade + Age.at.enrollment + Curricular.units.1st.sem.grade + Curricular.units.2nd.sem.grade, data = df, main = "Scatterplot matrix")
pairs(~ Admission.grade + Age.at.enrollment + Curricular.units.1st.sem..grade + Curricular.units.2nd.sem..grade, data = df, main = "Scatterplot matrix")
pairs(~ Admission.grade + Age.at.enrollment + Curricular.units.1st.sem..grade. + Curricular.units.2nd.sem..grade., data = df, main = "Scatterplot matrix")
df$Dropout <- ifelse(df$Target == "Dropout", 1, 0)
table(df$Dropout)
model_data <- df %>% select(Dropout, Admission.grade, Age.at.enrollment, Gender, Curricular.units.1st.sem.grade, Curricular.units.2nd.sem.grade)
model_data <- df %>% select(Dropout, Admission.grade, Age.at.enrollment, Gender, Curricular.units.1st.sem..grade., Curricular.units.2nd.sem..grade.)
model_data <- na.omit(model_data)
model_data <- df %>% select(Dropout, Admission.grade, Age.at.enrollment, Gender, Curricular.units.1st.sem..grade., Curricular.units.2nd.sem..grade.)
model_data <- na.omit(model_data)
model <- glm(Dropout ~ ., data = model_data, family = binomial)
summary(model)
exp(coef(model))
anova(model, test = "Chisq")
model_data$pred <- predict(model, type = "response")
model_data$pred_class <- ifelse(model_data$pred > 0.5, 1, 0)
table(Predicted = model_data$pred_class, Actual = model_data$Dropout)
mean(model_data$pred_class == model_data$Dropout)
